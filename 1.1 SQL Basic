/* Challenge: Book list database

Step 1
What are your favorite books? You can make a database table to store them in! In this first step, create a table to store your list of books. It should have columns for id, name, and rating. 

Step 2
Now, add three of your favorite books into the table.
*/

CREATE TABLE favorite_books (id INTEGER PRIMARY KEY , name TEXT ,rating INTEGER );
INSERT INTO favorite_books VALUES( 1 , " And Then There Were None", 4.5);
INSERT INTO favorite_books VALUES( 2 ,   "VOICES" ,  4.3);
INSERT INTO favorite_books VALUES( 3 , " Pride and Prejudice" , 4.6);

SELECT * FROM  favorite_books ;



/* Challenge: Box office hits database

step 1
Select them all
This database contains an incomplete list of box office hits and their release year. In this challenge, you're going to get the results back out of the database in different ways! In this first step, just select all the movies.

step 2
Filter recent movies
Now, add a second query after the first, that retrieves only the movies that were released in the year 2000 or later, not before. Sort the results so that the earlier movies are listed first. You should have 2 SELECT statements after this step.
*/

CREATE TABLE movies (id INTEGER PRIMARY KEY, name TEXT, release_year INTEGER);
INSERT INTO movies VALUES (1, "Avatar", 2009);
INSERT INTO movies VALUES (2, "Titanic", 1997);
INSERT INTO movies VALUES (3, "Star Wars: Episode IV - A New Hope", 1977);
INSERT INTO movies VALUES (4, "Shrek 2", 2004);
INSERT INTO movies VALUES (5, "The Lion King", 1994);
INSERT INTO movies VALUES (6, "Disney's Up", 2009);
 
 
SELECT * FROM movies;
SELECT * FROM movies WHERE id = 2;
SELECT * FROM movies WHERE release_year >= 1999 ORDER BY release_year;


/* Challenge: TODO list database stats

Step 1
Here's a table containing a TODO list with the number of minutes it will take to complete each item. Insert another item to your todo list with the estimated minutes it will take.

Step 2
Select the SUM of minutes it will take to do all of the items on your TODO list. You should only have one SELECT statement.
*/


CREATE TABLE todo_list (id INTEGER PRIMARY KEY, item TEXT, minutes INTEGER);
INSERT INTO todo_list VALUES (1, "Wash the dishes", 15);
INSERT INTO todo_list VALUES (2, "vacuuming", 20);
INSERT INTO todo_list VALUES (3, "Learn some stuff on KA", 30);
INSERT INTO todo_list VALUES (4, "Go to the grocery" , 30);


SELECT * FROM todo_list;
SELECT SUM(minutes) FROM todo_list;


